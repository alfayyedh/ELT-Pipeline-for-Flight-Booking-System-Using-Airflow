version: '3.8'
services:
  airflow:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: airflow_standalone
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=${AIRFLOW_DB_URI}
      - AIRFLOW__CORE__LOAD_DEFAULT_CONNECTIONS=False
      - AIRFLOW__CORE__FERNET_KEY=${AIRFLOW_FERNET_KEY}
    depends_on:
      - airflow_metadata
    ports:
      - "8081:8080"
    volumes:
      - ./dags:/opt/airflow/dags
      - ./include:/opt/airflow/include
    networks:
      - airflow-networks

  airflow_metadata:
    image: postgres:latest
    container_name: airflow_metadata
    environment:
      POSTGRES_USER: ${AIRFLOW_DB_USER}
      POSTGRES_PASSWORD: ${AIRFLOW_DB_PASSWORD}
      POSTGRES_DB: ${AIRFLOW_DB_NAME}
    ports:
      - 5433:5432
    volumes:
      - airflow_metadata:/var/lib/postgresql/data
    networks:
      - airflow-networks

  dwh_aircraft:
    image: postgres:latest
    container_name: dwh_aircraft
    environment:
      POSTGRES_USER: ${DWH_DB_USER}
      POSTGRES_PASSWORD: ${DWH_DB_PASSWORD}
      POSTGRES_DB: ${DWH_DB_NAME}
    ports:
      - 5434:5432
    networks:
      - airflow-networks
    volumes:
      - dwh_aircraft:/var/lib/postgresql/data
      - ./aircraft_dwh/:/docker-entrypoint-initdb.d

  src_aircraft:
    image: postgres:latest
    container_name: src_aircraft
    environment:
      POSTGRES_USER: ${SOURCE_DB_USER}
      POSTGRES_PASSWORD: ${SOURCE_DB_PASSWORD}
      POSTGRES_DB: ${SOURCE_DB_NAME}
    ports:
      - 5435:5432
    networks:
      - airflow-networks
    volumes:
      - ./aircraft_db:/docker-entrypoint-initdb.d
      - aircraft_data:/var/lib/postgresql/data


  minio:
    image: minio/minio:RELEASE.2024-06-13T22-53-53Z
    container_name: minio
    hostname: minio
    restart: always
    volumes:
      - minio-data:/data
    ports:
      - 9000:9000
      - 9001:9001
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - airflow-networks

volumes:
  airflow_metadata:
    driver: local
    name: airflow_metadata

  aircraft_data:
    driver: local
    name: aircraft_data

  minio-data:
    driver: local
    name: minio-data

  dwh_aircraft:
    driver: local
    name: dwh_aircraft

networks:
  airflow-networks:
    driver: bridge
    name: airflow-networks